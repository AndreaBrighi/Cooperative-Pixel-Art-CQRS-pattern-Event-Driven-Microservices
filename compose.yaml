services:
  gui:
    build: ./gui/
    ports:
      - 8080:80
    depends_on:
      gateway:
        condition: service_started
      rabbitmq:
         condition: service_healthy

  gateway:
    build: ./api-gateway/
    environment:
      - PORT=9000
    ports:
      - 9000:9000
    depends_on:
      kafka:
        condition: service_healthy

  dashboard:
    build: ./dashboard-view/
    environment:
      - PORT=9001
    ports:
      - 9001:9001
    depends_on:
      gateway:
        condition: service_started
      rabbitmq:
         condition: service_healthy
      kafka:
        condition: service_healthy

  pixelgrid:
    build: ./pixelgrid
    environment:
    - PORT=9002
    - GRID=Grid1
    ports:
      - 9002:9002
    depends_on:
      gateway:
          condition: service_started
      kafka:
        condition: service_healthy

  rabbitmq:
    build: ./rabbitmq
    ports:
      - 5672:5672
      - 5673:5673
      - 15672:15672
      - 15675:15675
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    restart: "no"
    ports:
      - "8000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
    depends_on:
      kafka:
        condition: service_healthy